<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- user_db -->
<mapper namespace="com.esuizhen.cloudservice.sync.dao.cloud.CloudUserDao" >
	<resultMap id="baseResultMap" type="com.westangel.common.bean.User" >
		<id column="userId" property="userId" jdbcType="BIGINT" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="syncFlag" property="syncFlag" jdbcType="VARCHAR" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="cryptPasswd" property="cryptPasswd" jdbcType="VARCHAR" />
		<result column="trueName" property="trueName" jdbcType="VARCHAR" />
		<result column="nickName" property="nickName" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="birthDate" property="birthDate" jdbcType="TIMESTAMP" />
		<result column="userPictureUrl" property="userPictureUrl" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="nation" property="nation" jdbcType="VARCHAR" />
		<result column="country" property="country" jdbcType="VARCHAR" />
		<result column="cityCode" property="cityCode" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="nativePlace" property="nativePlace" jdbcType="VARCHAR" />
		<result column="profession" property="profession" jdbcType="VARCHAR" />
		<result column="rawOccupationId" property="rawOccupationId" jdbcType="VARCHAR" />
		<result column="rawProfession" property="rawProfession" jdbcType="VARCHAR" />
		<result column="company" property="company" jdbcType="VARCHAR" />
		<result column="idType" property="idType" jdbcType="INTEGER" />
		<result column="identification" property="identification" jdbcType="VARCHAR" />
		<result column="marriageStatus" property="marriageStatus" jdbcType="INTEGER" />
		<result column="signature" property="signature" jdbcType="VARCHAR" />
		<result column="education" property="education" jdbcType="INTEGER" />
		<result column="school" property="school" jdbcType="VARCHAR" />
		<result column="interest" property="interest" jdbcType="VARCHAR" />
		<result column="idFileUrl" property="idFileUrl" jdbcType="VARCHAR" />
		<result column="accountType" property="accountType" jdbcType="INTEGER" />
		<result column="infoState" property="infoState" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="role" property="role" jdbcType="INTEGER" />
		<result column="subroles" property="subroles" jdbcType="VARCHAR" />
		<result column="points" property="points" jdbcType="INTEGER" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="firstLoginTime" property="firstLoginTime" jdbcType="TIMESTAMP" />
		<result column="lastLoginTime" property="lastLoginTime" jdbcType="TIMESTAMP" />
		<result column="sourceFlag" property="sourceFlag" jdbcType="INTEGER" />
		<result column="weixinFlag" property="weixinFlag" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="base_column_list">
		t1.userId, t1.uuid, t1.syncFlag, t1.userName, t1.cryptPasswd, t1.trueName, t1.nickName, t1.mobile, t1.sex, t1.birthDate, 
	    t1.userPictureUrl, t1.email, t1.nation, t1.country, t1.cityCode, t1.city, t1.address, t1.nativePlace, t1.profession, 
	    t1.rawOccupationId,t1.rawProfession,
	    t1.company, t1.idType, t1.identification, t1.marriageStatus, t1.signature, t1.education, t1.school, t1.interest, 
	    t1.idFileUrl, t1.accountType, t1.infoState, t1.state, t1.role, t1.subroles, t1.points, t1.createTime, t1.updateTime, 
	    t1.firstLoginTime, t1.lastLoginTime, t1.sourceFlag
	</sql>
	
	<select id="findByIdentification" resultMap="baseResultMap">
		SELECT
			<include refid="base_column_list"></include>
			,(SELECT MAX(productId) FROM user_db.u_thirdparty th1 WHERE th1.userId = t1.userId AND th1.state=1 ) weixinFlag
		FROM user_db.u_user t1
			INNER JOIN user_db.u_patient t2 ON t1.userId=t2.userId
		WHERE t1.idType=#{idType,jdbcType=INTEGER}
			AND t1.identification=#{identification,jdbcType=VARCHAR}
			AND t1.role=#{role,jdbcType=INTEGER}
			AND t2.auditState IN(0, #{auditState,jdbcType=INTEGER})
	</select>
	
	<select id="findByUuid" resultMap="baseResultMap">
		SELECT
			<include refid="base_column_list"></include>
		FROM user_db.u_user t1
		WHERE t1.uuid=#{uuid,jdbcType=VARCHAR}
	</select>
	
	<select id="findByMobile" resultMap="baseResultMap">
		SELECT
			<include refid="base_column_list"></include>
		FROM user_db.u_user t1
			LEFT JOIN user_db.u_doctor t2 ON t1.userId=t2.userId
		WHERE (t1.mobile=#{mobile,jdbcType=VARCHAR} OR t2.mobile=#{mobile,jdbcType=VARCHAR})
			AND t1.role=#{role,jdbcType=INTEGER}
	</select>
	
	<select id="findByUserId" resultMap="baseResultMap">
		SELECT
			<include refid="base_column_list"></include>
		from user_db.u_user t1 where t1.userId=#{userId,jdbcType=BIGINT}
		<if test="role != null">
			AND t1.role=#{role,jdbcType=BIGINT}
		</if>
	</select>
	
	<insert id="insert">
 		<selectKey resultType="long" keyProperty="userId" order="AFTER" >
			SELECT LAST_INSERT_ID() as userId
		</selectKey>
		insert into user_db.u_user (
			uuid, 
			userName, 
			cryptPasswd,
			trueName, 
			nickName, 
			mobile, 
			sex,
			birthDate, 
			userPictureUrl, 
			email, 
			nation, 
			country,
			cityCode, 
			city, 
			address, 
			nativePlace, 
			profession,
			rawOccupationId,
			rawProfession,
			company,
			idType, 
			identification, 
			marriageStatus, 
			signature, 
			education, 
			school, 
			interest,
			idFileUrl, 
			accountType, 
			infoState, 
			state, 
			role, 
			subroles, 
			points, 
			createTime, 
			updateTime, 
			firstLoginTime, 
			lastLoginTime, 
			sourceFlag, 
			syncFlag,
			syncTime
		)values(
			#{uuid},
			#{userName},
			#{cryptPasswd},
			#{trueName},
			#{nickName},
			#{mobile},
			#{sex},
			#{birthDate},
			#{userPictureUrl},
			#{email},
			#{nation},
			#{country},
			#{cityCode},
			#{city},
			#{address},
			#{nativePlace},
			#{profession},
			#{rawOccupationId},
			#{rawProfession},
			#{company},
			#{idType},
			#{identification},
			#{marriageStatus},
			#{signature},
			#{education},
			#{school},
			#{interest},
			#{idFileUrl},
			#{accountType},
			0,
			#{state},
			#{role},
			#{subroles},
			#{points},
			#{createTime},
			now(),
			#{firstLoginTime},
			#{lastLoginTime},
			#{sourceFlag},
			#{syncFlag},
			now()
		)
	 </insert>
	 
	 <update id="update">
	 	UPDATE user_db.u_user
	 	<set>
	 		<if test="uuid != null">
	 			uuid=#{uuid,jdbcType=VARCHAR},
	 		</if>
			<if test="trueName != null">
				trueName = #{trueName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nickName = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="birthDate != null">
				birthDate = #{birthDate,jdbcType=TIMESTAMP},
			</if>
			<if test="userPictureUrl != null">
				userPictureUrl = #{userPictureUrl,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="nation != null">
				nation = #{nation,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				country = #{country,jdbcType=VARCHAR},
			</if>
			<if test="cityCode != null">
				cityCode = #{cityCode,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="nativePlace != null">
				nativePlace = #{nativePlace,jdbcType=VARCHAR},
			</if>
			<if test="profession != null">
				profession = #{profession,jdbcType=VARCHAR},
			</if>
			<if test="rawOccupationId != null">
				rawOccupationId = #{rawOccupationId,jdbcType=VARCHAR},
			</if>
			<if test="rawProfession != null">
				rawProfession = #{rawProfession,jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company,jdbcType=VARCHAR},
			</if>
			<if test="idType != null">
				idType = #{idType,jdbcType=INTEGER},
			</if>
			<if test="identification != null">
				identification = #{identification,jdbcType=VARCHAR},
			</if>
			<if test="marriageStatus != null">
				marriageStatus = #{marriageStatus,jdbcType=INTEGER},
			</if>
			<if test="signature != null">
				signature = #{signature,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				education = #{education,jdbcType=INTEGER},
			</if>
			<if test="school != null">
				school = #{school,jdbcType=VARCHAR},
			</if>
			<if test="interest != null">
				interest = #{interest,jdbcType=VARCHAR},
			</if>
			<if test="idFileUrl != null">
				idFileUrl = #{idFileUrl,jdbcType=VARCHAR},
			</if>
			<if test="accountType != null">
				accountType = #{accountType,jdbcType=INTEGER},
			</if>
			<if test="infoState != null">
				infoState = #{infoState,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=INTEGER},
			</if>
			<if test="subroles != null">
				subroles = #{subroles,jdbcType=VARCHAR},
			</if>
			<if test="points != null">
				points = #{points,jdbcType=INTEGER},
			</if>
			<if test="lastLoginTime != null">
				lastLoginTime=#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sourceFlag != null">
				sourceFlag=#{sourceFlag},
			</if>
			<if test="syncFlag != null">
				syncFlag=#{syncFlag,jdbcType=INTEGER},
			</if>
			syncTime = NOW(),
			updateTime = NOW()
	 	</set>
	 	WHERE userId=#{userId,jdbcType=BIGINT}
	 </update>
	 
	 <update id="updateCityId">
	 	UPDATE user_db.u_user t1 
			INNER JOIN
			(
				select t1.userId,t1.cityName cityName1,t2.cityName cityName2,t2.cityId FROM
				(
					select userId,CASE WHEN cityName1!='' THEN cityName1 ELSE provinceName END cityName FROM
					(select 
							city,
							substring_index(substring_index(city,'市',1),"省",-1) cityName1,
							substring_index(city,'省',1) provinceName,
							userId 
					from user_db.u_user
					where role=1 and cityId IS NULL and city IS NOT NULL and city !=''
					) t
				)t1
				LEFT JOIN user_db.meta_city t2 ON locate(t1.cityName,t2.cityName)
				group by t1.userId
				) t2 ON t1.userId = t2.userId
				set t1.cityId = t2.cityId,t1.updateTime = NOW()
			WHERE t1.userId = #{userId}
	 </update>
	 
</mapper>